{"text": "Datadog | Jenkins pluginDatadogHow to installDocumentationReleasesIssuesDependenciesHealth Score A Jenkins plugin for automatically forwarding metrics, events, and service checks to a Datadog account. Note: The Jenkins CI plugin page for this plugin references this documentation. Setup Installation This plugin requires Jenkins 2.361.4 and Java 11. For older versions of Jenkins (i.e 1.632+), you can find the 1.2.0 version of the plugin here. This plugin can be installed from the Update Center (found at Manage Jenkins -> Manage Plugins) in your Jenkins installation: Select the Available tab, search for Datadog, and select the checkbox next to Datadog Plugin. Install the plugin by using one of the two install buttons at the bottom of the screen. To verify the plugin is installed, search for Datadog Plugin on the Installed tab. Continue below for configuration. Note: If you see an unexpected version of the Datadog Plugin, run Check Now from the Manage Jenkins -> Manage Plugins screen. Configuration There are two ways to configure your plugin to submit data to Datadog: Using a Datadog Agent that acts as a forwarder between Jenkins and Datadog (recommended). When using a DogStatsD server instead of a full Datadog Agent, only metrics and events are supported. For data submitted from an external host, the Datadog Agent requires the following configuration: dogstatsd_non_local_traffic: true and apm_non_local_traffic: true. This can be configured using the datadog.yaml configuration file. Sending data directly to Datadog through HTTP. The HTTP client implementation used is blocking with a timeout duration of 1 minute. If there is a connection problem with Datadog, it may slow your Jenkins instance down. The configuration can be done from the plugin user interface with a Groovy script, or through environment variables. Plugin user interface To configure your Datadog Plugin, navigate to the Manage Jenkins -> Configure System page on your Jenkins installation. Once there, scroll down to find the Datadog Plugin section: HTTP forwarding Select the radio button next to Use Datadog site and API key to report to Datadog (selected by default). Select your Datadog site in the Pick a site dropdown. Paste your Datadog API key in the API Key textbox on the Jenkins configuration screen. If you would like to store your API key with the Credentails Manager, create a Credential for the API key and select that credential in the Select from credentials dropdown. Test your Datadog API key by using the Test Key button on the Jenkins configuration screen directly below the API key textbox. (optional) Enter the name of the host that you use to access Datadog UI (e.g. app.datadoghq.com) in the Datadog App hostname field. (optional) Enter the hostname of the Jenkins server in the Advanced tab to include it with the events. (optional) Enter your Datadog Log Intake URL and select \"Enable Log Collection\" in the Advanced tab. (optional) Select \"Enable CI Visibility\", optionally configuring your CI Instance name. Save your configuration. Datadog Agent forwarding Select the radio button next to Use the Datadog Agent to report to Datadog. Specify your Datadog Agent hostname and port. (optional) Enter the name of the host that you use to access Datadog UI (e.g. app.datadoghq.com) in the Datadog App hostname field. (optional) Enter the hostname of the Jenkins server in the Advanced tab to include it with the events. (optional) Enter your Log Collection Port, configure log collection in the Datadog Agent, and select \"Enable Log Collection\". (optional) Enter your Trace Collection Port and select \"Enable CI Visibility\", optionally configuring your CI Instance name. Save your configuration. Groovy script Configure your Datadog plugin to forward data through HTTP or DogStatsD using the Groovy scripts below. Configuring the plugin this way might be useful if you're running your Jenkins Master in a Docker container using the official Jenkins Docker image or any derivative that supports plugins.txt and Groovy init scripts. HTTP forwarding using Groovy import hudson.util.Secret import jenkins.model.Jenkins import org.datadog.jenkins.plugins.datadog.DatadogGlobalConfiguration import org.datadog.jenkins.plugins.datadog.configuration.DatadogApiConfiguration import org.datadog.jenkins.plugins.datadog.configuration.api.intake.DatadogIntakeSite import org.datadog.jenkins.plugins.datadog.configuration.api.intake.DatadogSite import org.datadog.jenkins.plugins.datadog.configuration.api.key.DatadogTextApiKey def jenkins = Jenkins.getInstance() def datadog = jenkins.getDescriptorByType(DatadogGlobalConfiguration) def site = new DatadogIntakeSite(DatadogSite.US1) // pick your Datadog site def apiKey = new DatadogTextApiKey(Secret.fromString('<YOUR_API_KEY>')) // or `new DatadogCredentialsApiKey('<YOUR_CREDENTIALS_ID>')` datadog.datadogClientConfiguration = new DatadogApiConfiguration(site, apiKey) datadog.datadogAppHostname = 'app.datadoghq.com' // the name of the host that you use to access Datadog UI datadog.collectBuildLogs = true // if you want to collect logs datadog.enableCiVisibility = true // if you want to enable CI Visibility // Customization, see dedicated section below datadog.excluded = 'job1,job2' // Save config datadog.save() Datadog Agent forwarding using Groovy import jenkins.model.Jenkins import org.datadog.jenkins.plugins.datadog.DatadogGlobalConfiguration import org.datadog.jenkins.plugins.datadog.configuration.DatadogAgentConfiguration def jenkins = Jenkins.getInstance() def datadog = jenkins.getDescriptorByType(DatadogGlobalConfiguration) def agentHost = 'localhost' def agentPort = 8125 def agentLogCollectionPort = 10518 def agentTraceCollectionPort = 8126 datadog.datadogClientConfiguration = new DatadogAgentConfiguration(agentHost, agentPort, agentLogCollectionPort, agentTraceCollectionPort) datadog.datadogAppHostname = 'app.datadoghq.com' // the name of the host that you use to access Datadog UI datadog.collectBuildLogs = true // if you want to collect logs datadog.enableCiVisibility = true // if you want to enable CI Visibility // Customization, see dedicated section below datadog.excluded = 'job1,job2' // Save config datadog.save() Environment variables Configure your Datadog plugin using environment variables with the DATADOG_JENKINS_PLUGIN_REPORT_WITH variable, which specifies the report mechanism to use. HTTP forwarding using environment variables Set the DATADOG_JENKINS_PLUGIN_REPORT_WITH variable to HTTP. Set the DATADOG_JENKINS_PLUGIN_DATADOG_SITE variable, which specifies the Datadog site (defaults to US1). Set the DATADOG_JENKINS_PLUGIN_TARGET_API_KEY variable, which specifies your Datadog API key. (optional) Set the DATADOG_JENKINS_PLUGIN_DATADOG_APP_HOSTNAME variable to the name of the host that you use to access Datadog UI (e.g. app.datadoghq.com) (optional) Log Collection: Set the DATADOG_JENKINS_PLUGIN_COLLECT_BUILD_LOGS variable to true in order to enable log collection (disabled by default). (optional) CI Visibility (trace collection): Set the DATADOG_JENKINS_PLUGIN_ENABLE_CI_VISIBILITY variable to true in order to enable CI Visibility (disabled by default). Set the DATADOG_JENKINS_PLUGIN_CI_VISIBILITY_CI_INSTANCE_NAME variable, which specifies the name of the Jenkins instance for CI Visibility (defaults to jenkins). Datadog Agent forwarding using environment variables Set the DATADOG_JENKINS_PLUGIN_REPORT_WITH variable to DSD. Set the DATADOG_JENKINS_PLUGIN_TARGET_HOST variable, which specifies the DogStatsD server host (defaults to localhost). Set the DATADOG_JENKINS_PLUGIN_TARGET_PORT variable, which specifies the DogStatsD server port (defaults to 8125). (optional) Set the DATADOG_JENKINS_PLUGIN_DATADOG_APP_HOSTNAME variable to the name of the host that you use to access Datadog UI (e.g. app.datadoghq.com) (optional) Log Collection: Enable log collection in the Datadog Agent. Set the DATADOG_JENKINS_PLUGIN_COLLECT_BUILD_LOGS variable to true in order to enable log collection (disabled by default). Set the DATADOG_JENKINS_PLUGIN_TARGET_LOG_COLLECTION_PORT variable, which specifies the Datadog Agent log collection port. (optional) CI Visibility (trace collection): Set the DATADOG_JENKINS_PLUGIN_ENABLE_CI_VISIBILITY variable to true in order to enable CI Visibility (disabled by default). Set the DATADOG_JENKINS_PLUGIN_TARGET_TRACE_COLLECTION_PORT variable, which specifies the Datadog Agent trace collection port (defaults to 8126). Set the DATADOG_JENKINS_PLUGIN_CI_VISIBILITY_CI_INSTANCE_NAME variable, which specifies the name of the Jenkins instance for CI Visibility (defaults to jenkins). Additionally, you can use the standard Datadog environment variables: Set the DD_AGENT_HOST variable, which specifies the Datadog Agent host. Set the DD_AGENT_PORT variable, which specifies the DogStatsD server port. Set the DD_TRACE_AGENT_PORT variable, which specifies the Datadog Agent trace collection port. Set the DD_TRACE_AGENT_URL variable, which specifies the Datadog Agent URL to send traces. When set this takes precedence over DD_AGENT_HOST and DD_TRACE_AGENT_PORT. The environment variables with the DATADOG_JENKINS_PLUGIN namespace take precedence over the standard Datadog environment variables. Logging Logging is done by utilizing the java.util.Logger, which follows the best logging practices for Jenkins. The plugin automatically registers a custom logger named \"Datadog Plugin Logs\" that writes the plugin's logs with level INFO or higher. The custom logger registration can be disabled by setting the DD_JENKINS_PLUGIN_LOG_RECORDER_ENABLED environment variable to false. If you want to see the plugin logs with maximum detail, manually change the level of the custom logger to ALL. Customization Pipeline customization The Datadog plugin adds a datadog step that provides some configuration option for your pipeline-based jobs. Option (type) Description collectLogs (boolean) When log collection is disabled globally, this enables it for the pipeline. tags (String[]) A list of tags to attach to all the data collected about the pipeline. In declarative pipelines, add the step to a top-level options block like so: pipeline { agent any options { datadog(collectLogs: true, tags: [\"foo:bar\", \"bar:baz\"]) } stages { stage('Example') { steps { echo \"Hello world.\" } } } } In scripted pipeline, wrap the relevant section with the datadog step like so: datadog(collectLogs: true, tags: [\"foo:bar\", \"bar:baz\"]) { node { stage('Example') { echo \"Hello world.\" } } } Note: Pipeline customizations are only registered after a job has started. Tags specified in pipeline customization will not be associated with jenkins.job.started. Global customization To customize your global configuration, in Jenkins navigate to Manage Jenkins -> Configure System then click the Advanced button. The following options are available: Customization Description Environment variable Hostname A hostname to use in every event sent to Datadog. DATADOG_JENKINS_PLUGIN_HOSTNAME Excluded jobs A comma-separated list of regex used to exclude job names from monitoring, for example: susans-job,johns-.*,prod_folder/prod_release. This setting affects all aspects of the plugin: events, metrics, logs, CI visibility. DATADOG_JENKINS_PLUGIN_EXCLUDED Included jobs A comma-separated list of regex used to include job names for monitoring, for example: susans-job,johns-.*,prod_folder/prod_release. This setting affects all aspects of the plugin: events, metrics, logs, CI visibility. DATADOG_JENKINS_PLUGIN_INCLUDED Global tag file The path to a workspace file containing a comma separated list of tags (not compatible with pipeline jobs). DATADOG_JENKINS_PLUGIN_GLOBAL_TAG_FILE Global tags A comma-separated list of tags to apply to all metrics, events, and service checks. Tags can include environment variables that are defined in the master jenkins instance. DATADOG_JENKINS_PLUGIN_GLOBAL_TAGS Global job tags A comma separated list of regex to match a job and a list of tags to apply to that job. Tags can include environment variables that are defined in the master jenkins instance. Note: Tags can reference match groups in the regex using the $ symbol, for example: (.*?)_job_(*?)_release, owner:$1, release_env:$2, optional:Tag3 DATADOG_JENKINS_PLUGIN_GLOBAL_JOB_TAGS Send security audit events Submits the Security Events Type of events and metrics (enabled by default). DATADOG_JENKINS_PLUGIN_EMIT_SECURITY_EVENTS Send system events Submits the System Events Type of events and metrics (enabled by default). DATADOG_JENKINS_PLUGIN_EMIT_SYSTEM_EVENTS Include events to send A comma-separated list of event name strings to send, regardless of the event type being enabled/disabled. DATADOG_JENKINS_PLUGIN_INCLUDE_EVENTS Exclude events to send A comma-separated list of event name strings not to send, regardless of the event type being enabled/disabled. DATADOG_JENKINS_PLUGIN_EXCLUDE_EVENTS Job customization From a job specific configuration page: Customization Description Custom tags Set from a File in the job workspace (not compatible with pipeline jobs) or as text Properties directly from the configuration page. If set, this overrides the Global Job Tags configuration. Send source control management events Submits the Source Control Management Events Type of events and metrics (enabled by default). Test Optimization Configuration The plugin can automatically configure Datadog Test Optimization for a job or a pipeline (see the Test Optimization documentation for your language to make sure that the testing framework that you use is supported; also note that automatic configuration is not supported for tests that are executed inside containers - follow manual instrumentation steps to enable Test Optimization for containerized test runs). Before enabling Test Optimization, be sure to properly configure the plugin to submit data to Datadog. There are two options to enable automatic Test Optimization configuration: Using Jenkins UI (available in the plugin v5.6.0 or newer): go to the Configure page of the job or pipeline whose tests need to be traced, tick the Enable Datadog Test Optimization checkbox in the General section, and save your changes. This option is unavailable if you are using Multibranch Pipelines, Organization Folders, or other types of pipelines that are configured entirely with Jenkinsfile. Using datadog pipeline step (available in the plugin v5.6.2 or newer): In declarative pipelines, add the step to a top-level options block like so: pipeline { agent any options { datadog(testOptimization: [ enabled: true, serviceName: \"my-service\", // the name of service or library being tested languages: [\"JAVA\"], // languages that should be instrumented (available options are \"JAVA\", \"JAVASCRIPT\", \"PYTHON\", \"DOTNET\", \"RUBY\") additionalVariables: [\"my-var\": \"value\"] // additional tracer configuration settings (optional) ]) } stages { stage('Example') { steps { echo \"Hello world.\" } } } } In scripted pipelines, wrap the relevant section with the datadog step like so: datadog(testOptimization: [ enabled: true, serviceName: \"my-service\", languages: [\"JAVA\"], additionalVariables: [:] ]) { node { stage('Example') { echo \"Hello world.\" } } } The other datadog settings, such as collectLogs or tags can be added alongside the testOptimization block. Please bear in mind that Test Optimization is a separate Datadog product that is billed separately. Data collected This plugin is collecting the following events, metrics, and service checks: Events Default events type Event name Triggered on Default tags Associated RATE metric BuildStarted RunListener#onStarted branch, event_type, jenkins_url, job, node, user_id jenkins.job.started BuildAborted RunListener#onDeleted branch, event_type, jenkins_url, job, node, user_id jenkins.job.aborted BuildCompleted RunListener#onCompleted branch, event_type, jenkins_url, job, node, result, user_id jenkins.job.completed SCMCheckout SCMListener#onCheckout branch, event_type, jenkins_url, job, node, user_id jenkins.scm.checkout NOTE: event_type is always set to default for above events and metrics. Systems events type Event name Triggered on Default tags Associated RATE metric ComputerOnline ComputerListener#onOnline event_type, jenkins_url, node_hostname, node_name, node_label jenkins.computer.online ComputerOffline ComputerListener#onOffline event_type, jenkins_url, node_hostname, node_name, node_label jenkins.computer.offline ComputerTemporarilyOnline ComputerListener#onTemporarilyOnline event_type, jenkins_url, node_hostname, node_name, node_label jenkins.computer.temporarily_online ComputerTemporarilyOffline ComputerListener#onTemporarilyOffline event_type, jenkins_url, node_hostname, node_name, node_label jenkins.computer.temporarily_offline ComputerLaunchFailure ComputerListener#onLaunchFailure event_type, jenkins_url, node_hostname, node_name, node_label jenkins.computer.launch_failure ItemCreated ItemListener#onCreated event_type, jenkins_url, user_id jenkins.item.created ItemDeleted ItemListener#onDeleted event_type, jenkins_url, user_id jenkins.item.deleted ItemUpdated ItemListener#onUpdated event_type, jenkins_url, user_id jenkins.item.updated ItemCopied ItemListener#onCopied event_type, jenkins_url, user_id jenkins.item.copied ItemLocationChanged ItemListener#onLocationChanged event_type, jenkins_url, user_id jenkins.item.location_changed NOTE: event_type is always set to system for above events and metrics. Security events type Event name Triggered on Default tags Associated RATE metric UserAuthenticated SecurityListener#authenticated event_type, jenkins_url, user_id jenkins.user.authenticated UserFailedToAuthenticate SecurityListener#failedToAuthenticate event_type, jenkins_url, user_id jenkins.user.access_denied UserLoggedOut SecurityListener#loggedOut event_type, jenkins_url, user_id jenkins.user.logout NOTE: event_type is always set to security for above events and metrics. Filtering events This plugin allows you to filter events by the event type as well as the specific event names listed above. To include/exclude all events of the system or security type: In the UI: Uncheck the checkboxes for these events. In a groovy script: Fetch the Datadog global descriptor and call either d.setEmitSystemEvents() or d.setEmitSecurityEvents(). In the environment variables section: Set the environment variables for the emitting security or system events. To get more specific control over what events are sent, three configuration options are provided to allow a comma-separated include/exclude list of strings of event names. The include/exclude list has precedence over filtering by event type. For example, security events can be toggled off, but including UserAuthenticated takes precedence, so only UserAuthenticated events will be sent from the security type. In the UI, text boxes are provided for both the included and excluded lists. In a groovy script, the methods d.setIncludeEvents() and d.setExcludeEvents() accept a comma-separated list of event names as input which is another valid configuration method. Lastly, there are provided environment variables for manually setting included/excluded lists. NOTE: As mentioned in the job customization section, there are job-specific toggles to send SCMCheckout events. If the SCMCheckout event is excluded globally, this toggle will have no effect. Metrics Metric Name Description Default Tags jenkins.computer.launch_failure Rate of computer launch failures. jenkins_url jenkins.computer.offline Rate of computer going offline. jenkins_url jenkins.computer.online Rate of computer going online. jenkins_url jenkins.computer.temporarily_offline Rate of computer going temporarily offline. jenkins_url jenkins.computer.temporarily_online Rate of computer going temporarily online. jenkins_url jenkins.config.changed Rate of configs being changed. jenkins_url, user_id jenkins.executor.count Executor count. jenkins_url, node_hostname, node_name, node_label jenkins.executor.free Number of unused executor. jenkins_url, node_hostname, node_name, node_label jenkins.executor.in_use Number of idle executor. jenkins_url, node_hostname, node_name, node_label jenkins.item.copied Rate of items being copied. jenkins_url, user_id jenkins.item.created Rate of items being created. jenkins_url, user_id jenkins.item.deleted Rate of items being deleted. jenkins_url, user_id jenkins.item.location_changed Rate of items being moved. jenkins_url, user_id jenkins.item.updated Rate of items being updated. jenkins_url, user_id jenkins.job.aborted Rate of aborted jobs. branch, jenkins_url, job, node, user_id jenkins.job.build_duration Build duration without pause (in seconds). branch, jenkins_url, job, node, result, user_id jenkins.job.completed Rate of completed jobs. branch, jenkins_url, job, node, result, user_id jenkins.job.cycletime Build Cycle Time (in seconds). branch, jenkins_url, job, node, result, user_id jenkins.job.duration Build duration (in seconds). branch, jenkins_url, job, node, result, user_id jenkins.job.feedbacktime Feedback time from code commit to job failure (in seconds). branch, jenkins_url, job, node, result, user_id jenkins.job.leadtime Build Lead Time. branch, jenkins_url, job, node, result, user_id jenkins.job.mtbf MTBF, time between last successful job and current failed job (in seconds). branch, jenkins_url, job, node, result, user_id jenkins.job.mttr MTTR: time between last failed job and current successful job (in seconds). branch, jenkins_url, job, node, result, user_id jenkins.job.pause_duration Pause duration of build job (in seconds). branch, jenkins_url, job, node, result, user_id jenkins.job.started Rate of started jobs. branch, jenkins_url, job, node, user_id jenkins.job.stage_duration Duration of individual stages. jenkins_url, job, user_id, stage_name, stage_depth, stage_parent, result jenkins.job.stage_pause_duration Pause duration of individual stages (in milliseconds). jenkins_url, job, user_id, stage_name, stage_depth, stage_parent, result jenkins.job.stage_completed Rate of completed stages. jenkins_url, job, user_id, stage_name, stage_depth, stage_parent, result jenkins.job.waiting Time spent waiting for job to run (in seconds). branch, jenkins_url, job, node, user_id jenkins.job.currently_building Count of currently building jobs (does not include jobs that were scheduled but have not started yet). jenkins_url jenkins.node.count Total number of node. jenkins_url jenkins.node.offline Offline nodes count. jenkins_url jenkins.node.online Online nodes count. jenkins_url jenkins.node_status.count If this node is present. jenkins_url, node_hostname, node_name, node_label jenkins.node_status.up If a given node is online, value 1. Otherwise, 0. jenkins_url, node_hostname, node_name, node_label jenkins.plugin.count Plugins count. jenkins_url jenkins.plugin.active Plugins active. jenkins_url jenkins.plugin.failed Plugins failed. jenkins_url jenkins.plugin.inactivate Plugins inactive. jenkins_url jenkins.plugin.withUpdate Plugins with update. jenkins_url jenkins.plugin.withWarning Plugins with warning. jenkins_url jenkins.project.count Project count. jenkins_url jenkins.queue.size Queue Size. jenkins_url jenkins.queue.buildable Number of Buildable item in Queue. jenkins_url jenkins.queue.pending Number of Pending item in Queue. jenkins_url jenkins.queue.stuck Number of Stuck item in Queue. jenkins_url jenkins.queue.blocked Number of Blocked item in Queue. jenkins_url jenkins.queue.job.in_queue Number of times a Job has been in a Queue. jenkins_url, job_name jenkins.queue.job.buildable Number of times a Job has been Buildable in a Queue. jenkins_url, job_name jenkins.queue.job.pending Number of times a Job has been Pending in a Queue. jenkins_url, job_name jenkins.queue.job.stuck Number of times a Job has been Stuck in a Queue. jenkins_url, job_name jenkins.queue.job.blocked Number of times a Job has been Blocked in a Queue. jenkins_url, job_name jenkins.scm.checkout Rate of SCM checkouts. branch, jenkins_url, job, node, user_id jenkins.user.access_denied Rate of users failing to authenticate. jenkins_url, user_id jenkins.user.authenticated Rate of users authenticating. jenkins_url, user_id jenkins.user.logout Rate of users logging out. jenkins_url, user_id Log Collection for Agents Note: This configuration only applies to those using the Datadog Agent configuration. Collecting logs is disabled by default in the Datadog Agent, enable it in your datadog.yaml file: logs_enabled: true To collect Jenkins logs, create a custom log source file for your Agent by creating a conf.yaml inside conf.d/jenkins.d with the following: logs: - type: tcp port: <PORT> service: <SERVICE> source: jenkins In Jenkins, submit the port you specified above as the Log Collection Port. You can set this using environment variables, a Groovy script, or the Jenkins UI. Restart the Agent. Service checks Build status jenkins.job.status with the default tags: : jenkins_url, job, node, user_id Troubleshooting Generating a diagnostic flare. Plugin diagnostic flare contains data that can be used to diagnose problems with the plugin. At the time of this writing the flare includes the following: plugin configuration in XML format plugin connectivity checks results runtime data (current versions of JVM, Jenkins Core, plugin) recent exceptions that happened inside the plugin code plugin logs with level INFO and above, and recent Jenkins controller logs current stacks of the threads of the Jenkins controller process environment variables starting with DD_ or DATADOG_ (except API key and/or APP key) To generate a flare go to the Manage Jenkins page, find the Troubleshooting section, and select Datadog. Click on Download Diagnostic Flare (requires \"MANAGE\" permissions) to generate the flare. Issue tracking GitHub's built-in issue tracking system is used to track all issues relating to this plugin: jenkinsci/datadog-plugin/issues. However, given how Jenkins plugins are hosted, there may be issues that are posted to JIRA as well. You can check this jenkins issue for those issue postings. Note: Unresolved issues on JIRA mentioning Datadog. Changes See the CHANGELOG.md. How to contribute code First of all and most importantly, thank you for sharing. Checkout the contributing guidelines before you submit an issue or a pull request. Checkout the development document for tips on spinning up a quick development environment locally. Version: 9.1.4Released: 2 days agoRequires Jenkins 2.361.4ID: datadogInstalled on 1.14% of\u00a0controllersView detailed version informationLinksGitHubOpen issues (Github)Report an issue (Github)Open issues (Jira)Report an issue (Jira)Pipeline Step ReferenceJavadocLabelsBuild NotifiersOther Post-Build ActionsBuild ReportsMaintainersDatadog HQHelp us improve this page!To propose a change submit a pull request to the plugin page on GitHub.Previous Security WarningsAPI key gets transmitted in unencrypted formAffects version 0.5.6 and earlierMissing permission check allows capturing credentialsAffects version 5.4.1 and earlier", "embedding": [[-0.1363876461982727, 0.16029074788093567, -0.035009488463401794, -0.2316630780696869, -0.017176851630210876, 0.10704297572374344, 0.006929249502718449, 0.009292916394770145, 0.056265756487846375, 0.05010627582669258, 0.06549501419067383, 0.18883070349693298, -0.11460337787866592, 0.15019428730010986, -0.0008543014992028475, 0.09557577967643738, 0.030383653938770294, 0.048142895102500916, -0.13256308436393738, 0.0019440315663814545, -0.08873117715120316, -0.001725657843053341, -0.05800635367631912, -0.03158091381192207, -0.10932198166847229, 0.0658845454454422, 0.00020071107428520918, 0.00594507809728384, 0.04768812283873558, -0.22672361135482788, 0.03404134511947632, -0.06009681522846222, -0.06670574843883514, 0.060712434351444244, 5.870528184459545e-06, -0.005031131207942963, 0.14732800424098969, 0.030343610793352127, 0.07272638380527496, 0.025626175105571747, -0.07215619087219238, -0.3063913583755493, -0.014697469770908356, 0.028599813580513, 0.059824973344802856, -0.09842390567064285, 0.05837029963731766, 0.13546736538410187, 0.07328872382640839, 0.03778708726167679, -0.0033659259788691998, 0.08814772218465805, 0.078707754611969, -0.016872888430953026, -0.014691436663269997, -0.07306596636772156, 0.05748382955789566, 0.1938307285308838, -0.03101055696606636, -0.07366903126239777, 0.026959070935845375, -0.06048203259706497, 0.004711486399173737, -0.05134231597185135, -0.020881252363324165, 0.01095530204474926, 0.01321910135447979, -0.0854235291481018, 0.049313366413116455, 0.0043381378054618835, -0.05119573324918747, -0.09852185845375061, -0.0945754200220108, -0.05391625314950943, -0.03611195459961891, 0.04750467836856842, 0.07224691659212112, -0.05763495713472366, 0.05173683166503906, -0.03383670374751091, -0.03994852676987648, 0.07118450850248337, -0.16280245780944824, 0.004215084947645664, 0.045222144573926926, 0.17571595311164856, 0.06619063019752502, 0.07388944923877716, -0.060513727366924286, 0.08217515796422958, 0.05289745330810547, 0.05838780105113983, -0.06122502312064171, 0.09940542280673981, -0.12614788115024567, -0.13352936506271362, 0.033129483461380005, -0.2183995246887207, 0.16757243871688843, 0.04485343024134636, -0.08840478956699371, -0.09245674312114716, 0.013500260189175606, 0.042307280004024506, 0.010124927386641502, 0.0016063291113823652, 0.18401968479156494, 0.040073998272418976, 0.16349123418331146, -0.01262044720351696, -0.008358090184628963, 0.04457397758960724, -0.044959962368011475, -0.1655329465866089, 0.13892397284507751, -0.027598747983574867, 0.19422240555286407, 0.12145598232746124, -0.03619732707738876, 0.03433503210544586, 0.03704081103205681, -0.04857628047466278, -0.08795993030071259, 0.127358540892601, 0.04894635081291199, -0.12626995146274567, -0.15057900547981262, 0.07226879894733429, -0.0037084100767970085, 0.09208300709724426, -0.04863978177309036, 0.0309813991189003, 0.05582571402192116, -0.030820518732070923, 0.03429222106933594, 0.05168869346380234, 0.23385637998580933, 0.05116010457277298, -0.17646747827529907, 0.07696467638015747, 0.024499811232089996, -0.018469978123903275, -0.14671580493450165, 0.018317515030503273, 0.00310517568141222, -0.013769058510661125, 0.012764686718583107, 0.05221141129732132, -0.053905874490737915, -0.056741222739219666, 0.04867418855428696, 0.06409215927124023, -0.001560034230351448, -0.03930020332336426, -0.13765281438827515, -0.08730116486549377, -0.13619472086429596, -0.0343480110168457, -0.10745503753423691, 0.006212030071765184, -0.09385322034358978, -0.003596636699512601, -0.032482899725437164, -0.0072145708836615086, 0.014699704945087433, -0.006345047149807215, 0.032748993486166, 0.07169424742460251, 0.031207667663693428, -0.06287947297096252, -0.005116813350468874, -0.08531644195318222, 0.13610097765922546, 0.1928425133228302, 0.05588366463780403, 0.047272130846977234, 0.12725432217121124, -0.22339896857738495, -0.008930777199566364, 0.18923857808113098, -0.09604749083518982, -0.08680496364831924, 0.019812382757663727, -0.016813691705465317, 0.030571989715099335, 0.02885868027806282, -0.16766031086444855, 0.1417979598045349, -0.01098710298538208, 0.04809056967496872, 0.012648647651076317, -0.06514070183038712, -0.10923811793327332, 0.021508732810616493, 0.17614753544330597, 0.027541685849428177, 0.09367948025465012, -0.1451840102672577, 0.032624661922454834, -0.017234710976481438, -0.02989988401532173, 0.066915363073349, 0.030620446428656578, 0.04070931673049927, 0.10042005777359009, -0.17253392934799194, 0.0031771445646882057, -0.007896899245679379, -0.0398021824657917, -0.03618259355425835, 0.009978733956813812, -0.031060516834259033, -0.09782916307449341, 0.01042366586625576, -0.006707069464027882, 0.01981242559850216, 0.051766715943813324, -0.07667980343103409, 0.0365363210439682, 0.10071136057376862, -0.0514676570892334, -0.02004927024245262, -0.0432715117931366, 0.11308364570140839, 0.25063571333885193, -0.13101592659950256, 0.06218961626291275, -0.0855751633644104, 0.18192744255065918, -0.039822664111852646, -0.04008864238858223, 0.08095276355743408, -0.017732031643390656, 0.042980585247278214, -0.05377333611249924, 0.08065713942050934, 0.22427412867546082, -0.064069002866745, -0.029952308163046837, 0.053093910217285156, 0.06048170104622841, 0.15835902094841003, -0.09522919356822968, -0.045899584889411926, -0.10188648104667664, -0.040774568915367126, -0.10070842504501343, 0.006189444102346897, -0.016960613429546356, -0.013426956720650196, 0.11705835163593292, -0.16796433925628662, -0.009273406118154526, 0.0896100178360939, -0.05300070717930794, -0.12725284695625305, 0.12691111862659454, -0.08780933916568756, 0.015235494822263718, 0.044349316507577896, -0.0005752979777753353, 0.0031209217850118876, -0.006556487642228603, 0.12702731788158417, 0.06288399547338486, 0.04372469335794449, -0.07256291061639786, 0.1699117124080658, -0.009235505014657974, 0.08893564343452454, 0.03339117765426636, 0.007927590049803257, -0.05482478439807892, 0.034195203334093094, 0.04440336301922798, -0.07150721549987793, -0.04959787428379059, 0.2393825650215149, -0.06125670298933983, -0.0026031408924609423, -0.04181806370615959, 0.06824790686368942, 0.0313558503985405, 0.05336321145296097, -0.01873752847313881, -0.07038787007331848, 0.06284403055906296, -0.00123587844427675, -0.1080615445971489, 0.03053859993815422, 0.05197285860776901, -0.10569149255752563, 0.10645352303981781, -0.08347080647945404, -0.097946897149086, 0.02927665039896965, -0.07802803069353104, -0.03270026296377182, -0.04969997704029083, 0.0629374235868454, 0.04102370887994766, 0.051482997834682465, -0.036885347217321396, -0.08443902432918549, 0.07015153765678406, 0.14645624160766602, 0.1473502218723297, 0.0496751107275486, 0.05819469690322876, -0.2176671028137207, -0.010617787018418312, -0.15749813616275787, -0.04265979677438736, 0.15215346217155457, 0.08810827136039734, -0.07214891910552979, 0.08400667458772659, -0.13479702174663544, 0.07995109260082245, -0.09149141609668732, 0.02861197665333748, -0.08813384920358658, 0.04076961427927017, 0.012874875217676163, 0.011964584700763226, -0.040248751640319824, -0.033532507717609406, -0.053664300590753555, -0.004204120486974716, 0.07106108218431473, 0.020947767421603203, -0.04712163656949997, -0.010588521137833595, 0.1271776705980301, 0.10296419262886047, -0.06810866296291351, 0.05951537936925888, -0.25629836320877075, 0.08910819888114929, -0.06701846420764923, 0.11202988028526306, 0.09090474247932434, -0.060913413763046265, 0.12571950256824493, 0.05172402411699295, 0.10584800690412521, -0.09300288558006287, -0.0252695232629776, -0.041779667139053345, -0.05150088667869568, 0.06695303320884705, -0.014177663251757622, 0.05665850639343262, 0.007243141531944275, -0.02939283475279808, 0.04025295376777649, 0.0783543810248375, -0.13492728769779205, 0.06017669290304184, 0.06901153922080994, 0.1835421919822693, 0.018601197749376297, 0.1654827892780304, 0.0034899013116955757, 0.01972285285592079, 0.05186424031853676, -0.1800065040588379, -0.07997581362724304, 0.21620064973831177, -0.014460987411439419, -0.12128406763076782, -0.06934968382120132, 0.010003799572587013, 0.08615139871835709, 0.029639996588230133, -0.04537772387266159, 0.056076664477586746, -0.10207343846559525, -0.07003169506788254, 0.00657576322555542, 0.03804168105125427, 0.046065010130405426, 0.08503694832324982, 0.0850381851196289, -0.08414394408464432, -0.06301875412464142, 0.03959158435463905, 0.05102667957544327, 0.007831982336938381, -0.05845281481742859, 0.024748746305704117, 0.015244301408529282, -0.07396946847438812, -0.04105070233345032, -0.02054179459810257, 0.03265531733632088, -0.23793840408325195, -0.054024480283260345, 0.19973143935203552, 0.07390286028385162, 0.0018015970708802342, 0.07395024597644806, -0.06551790237426758, 0.1148422583937645, -0.09551115334033966, 0.15275049209594727, 0.13460998237133026, -0.0458001047372818, -0.037397079169750214, -0.018489520996809006, 0.07898927479982376, -0.04109002649784088, -0.03392994776368141, 0.01482373382896185, 0.16812348365783691, -0.11754634976387024, -0.06014835834503174, -0.04890117421746254, 0.07888771593570709, -0.18755659461021423, 0.04788558930158615, -0.005431393161416054, 0.09146904945373535, -0.1332174837589264, 0.021382004022598267, -0.13032186031341553, -0.04576515406370163, 0.08472620695829391, 0.06967612355947495, 0.023703258484601974, -0.08549809455871582, 0.04400820657610893, 0.08682438731193542, -0.09181210398674011, 0.06691502779722214, 0.15275536477565765, 0.07903076708316803, -0.056279830634593964, -0.18521593511104584, -0.15552544593811035, -0.14029213786125183, 0.1472533941268921, 0.10646362602710724, 0.045378074049949646, -0.16141900420188904, -0.028560783714056015, 0.08296032249927521, -0.02414529398083687, 0.11440489441156387, 0.11343054473400116, 0.13243025541305542, 0.06192478537559509, -0.022481296211481094, 0.09954004734754562, 0.10221700370311737, 0.0031464239582419395, 0.012984612956643105, -0.0031629169825464487, -0.12974481284618378, 0.022686002776026726, 0.02332167513668537, 0.03716132044792175, -0.07331551611423492, -0.07367268204689026, 0.15462854504585266, -0.0008535167435184121, -0.12704971432685852, -0.27683964371681213, -0.06018957495689392, 0.040494002401828766, 0.012918658554553986, -0.010756655596196651, -0.06071038544178009, 0.010447529144585133, 0.16478225588798523, -0.08678413927555084, 0.10551954805850983, 0.033643078058958054, -0.028856772929430008, -0.03414001315832138, 0.03485545888543129, -0.21557998657226562, 0.07395504415035248, -0.04760812222957611, -0.006821926217526197, 0.017986290156841278, -0.04179496318101883, 0.00505977775901556, -0.0917397290468216, 0.05791671574115753, -0.07120558619499207, -0.10501345992088318, -0.0012068820651620626, -0.050693854689598083, -0.00033254074514843524, -0.10917196422815323, 0.03692270815372467, -0.054560042917728424, 0.10523229837417603, 0.0857718288898468, -0.029341191053390503, -0.09185634553432465, 0.04237034544348717, -0.07731933891773224, -0.045838259160518646, -0.011383104138076305, 0.011763391084969044, -0.05535131320357323, -0.06360967457294464, -0.07952048629522324, -0.04069313406944275, -0.07829593122005463, -0.17546746134757996, 0.11786843091249466, 0.06005047261714935, -0.14882370829582214, -0.04992566630244255, 0.03529736027121544, 0.06116025522351265, -0.009165197610855103, -0.009092136286199093, -0.04592955857515335, 0.019021086394786835, -0.07874275743961334, 0.11649008095264435, -0.10228382050991058, -0.018977243453264236, 0.06702236831188202, -0.0753306895494461, -0.032877109944820404, 0.0021165739744901657, 0.08247402310371399, -0.1545065939426422, -0.11283110827207565, -0.033615149557590485, 0.029116980731487274, 0.03718689829111099, 0.23525917530059814, -0.008443084545433521, 0.011231099255383015, 0.07676821947097778, -0.04105130210518837, -0.10954200476408005, 0.060253918170928955, -0.03888612985610962, -0.1011824831366539, -0.009832211770117283, 0.021851614117622375, -0.049945615231990814, 0.0028651300817728043, 0.029812877997756004, -0.09866288304328918, 0.07528732717037201, 0.0050593712367117405, -0.00646615494042635, -1.3836745472897085e-32, -0.021276473999023438, -0.1560865044593811, -0.06531371176242828, 0.09708423167467117, -0.07598545402288437, 0.025796057656407356, -0.03508427366614342, -0.09540195763111115, -0.007080570328980684, 0.019723638892173767, 0.01961873658001423, 0.07299116253852844, 0.013968885876238346, -0.038223929703235626, 0.11065497994422913, 0.08823058009147644, 0.03665493428707123, -0.08694364130496979, 0.0697622299194336, 0.03762923926115036, 0.11204177141189575, -0.06274834275245667, -0.05095135420560837, 0.09949672967195511, 0.21134281158447266, 0.05255249887704849, -0.036003127694129944, -0.01742173358798027, 0.028354885056614876, -0.03656233474612236, 0.08613502234220505, -0.046662501990795135, 0.012615451589226723, 0.12746143341064453, 0.014449710957705975, 0.07639491558074951, -0.053309403359889984, -0.03886471688747406, -0.12035480886697769, -0.01965094357728958, 0.09756475687026978, 0.03981383889913559, 0.018447868525981903, -0.06483349204063416, 0.08972446620464325, 0.0632820874452591, 0.002710607135668397, 0.05010289326310158, 0.06295046955347061, -0.03294626995921135, -0.12072392553091049, -0.02622634917497635, -0.08731186389923096, 0.04872105270624161, 0.002764530945569277, -0.003817378543317318, 0.01785707287490368, 0.012038378044962883, 0.04077579081058502, -0.05776337534189224, 0.020517686381936073, -0.03097923845052719, 0.10829789936542511, -0.023683492094278336, 0.04603218287229538, 0.02211792767047882, -0.1483559012413025, 0.011562390252947807, 0.07965758442878723, 0.05234338343143463, -0.01734396256506443, -0.009717131033539772, 0.05422740429639816, -0.13059091567993164, -0.12929755449295044, -0.09236612915992737, 0.07301149517297745, 0.09856649488210678, 0.27091971039772034, 0.11580201983451843, -0.0015187205281108618, -0.17889919877052307, 0.022107068449258804, 0.0819518119096756, -0.00994691252708435, -0.14387425780296326, 0.03570340573787689, -0.07962040603160858, -0.0066984063014388084, 0.05487519130110741, -0.08268406242132187, -0.12970614433288574, -0.003590768203139305, -0.010272708721458912, 0.18388351798057556, 0.04260776937007904, 0.0656948983669281, 0.03984803333878517, -0.07227960228919983, -0.21520602703094482, -0.027177676558494568, 0.062291160225868225, 0.0005880552344024181, 0.20644493401050568, 0.12686662375926971, -0.03416186943650246, 0.07198858261108398, 0.005822462495416403, -0.0875074714422226, -0.012040462344884872, -0.08494453132152557, 0.0432976558804512, -0.03550446033477783, -0.10822898149490356, 0.07266485691070557, 0.04901760071516037, 0.008338197134435177, 0.043635714799165726, -0.035655707120895386, -0.14406707882881165, 0.049651093780994415, 0.09263584017753601, 0.052108101546764374, 0.002851977478712797, 0.018807319924235344, -0.03901179879903793, -0.04059681296348572, -0.1784784495830536, 0.13499514758586884, -0.05710413306951523, 0.04962976649403572, -0.05798602104187012, 7.422742100970936e-07, -0.057542890310287476, 0.08537300676107407, 0.03797709569334984, 0.1040758416056633, 0.045666247606277466, -0.020114975050091743, -0.053642287850379944, -0.09744050353765488, -0.11058859527111053, -0.03590176999568939, 0.00994817353785038, -0.09117743372917175, -0.08220496773719788, 0.07000640034675598, 0.06737849861383438, -0.16006433963775635, -0.058608319610357285, 0.10139651596546173, -0.08240246772766113, 0.09937092661857605, 0.0584336593747139, 0.0689062774181366, -0.014662092551589012, -0.02800297923386097, 0.024967201054096222, -0.1262560486793518, -0.1723887324333191, 0.10327020287513733, -0.0428665466606617, 0.023368580266833305, 0.042788419872522354, -0.034969039261341095, -0.025474054738879204, 0.16112929582595825, -0.1257944405078888, 0.08438760042190552, -0.1096123456954956, -0.14468315243721008, -0.05142999067902565, -0.04035932943224907, -0.05909915268421173, -0.04670104384422302, -0.08306507766246796, -0.13298724591732025, 0.11316658556461334, 0.08352812379598618, -0.09677579998970032, -0.1225714385509491, 0.060682423412799835, -0.13663798570632935, -0.09730933606624603, 0.0859532505273819, 0.020881108939647675, -0.07359368354082108, -0.027284542098641396, 0.0026648230850696564, -0.012360312044620514, 0.007509759161621332, -0.13963265717029572, -0.09178134799003601, -0.07546328008174896, -0.13326072692871094, 0.052120327949523926, -0.015591534785926342, 0.05416257679462433, -0.038192737847566605, -0.11528477072715759, 8.932175659005544e-34, 0.13813544809818268, -0.03723730891942978, 0.030943211168050766, -0.0050736996345222, -0.03399822860956192, -0.024707529693841934, -0.1574508547782898, 0.08897751569747925, 0.153106689453125, -0.20597118139266968, -0.017962832003831863]]}